"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","445189b73e835362c87d8488980f2ce7"],["/static/css/main.7b51c07d.css","63d3dbb53421682482ef3884b5b0ad33"],["/static/js/main.ba13c548.js","ae5e303424bcb721e64d6f8f2ff04937"],["/static/media/BackgroundSpace.ffb167de.jpg","ffb167de5a6b2324291f2dbd34e4cde8"],["/static/media/background.68f5ccb5.jpg","68f5ccb5eb05ef5263884c49d417e947"],["/static/media/backgroundCemetery2.d24ec36d.jpg","d24ec36dc9d288560efe61edce1f1dbe"],["/static/media/backgroundCemetery3.9bff1615.jpg","9bff1615d23543f24c3c3bf94c6146f0"],["/static/media/backgroundLogin.569b46d2.jpg","569b46d284170df111361c28a20e6cf7"],["/static/media/cardback.9d3db534.jpg","9d3db53435ed41bcdab335bb962aaa0b"],["/static/media/catpaw2.fabaeff1.png","fabaeff1d21fff9dd4c566893a1d1670"],["/static/media/chatGuerrier.5a5b0f9d.jpg","5a5b0f9dc1c728dc5f2e78b1b7308222"],["/static/media/chatZorro.11f66cd1.jpg","11f66cd168f9db3a0167b2184d092f30"],["/static/media/flyingCat.ac2cc04f.gif","ac2cc04f94da5f170e90f1b87f99dbcc"],["/static/media/glyphicons-halflings-regular.448c34a5.woff2","448c34a56d699c29117adc64c43affeb"],["/static/media/glyphicons-halflings-regular.89889688.svg","89889688147bd7575d6327160d64e760"],["/static/media/glyphicons-halflings-regular.e18bbf61.ttf","e18bbf611f2a2e43afc071aa2f4e1512"],["/static/media/glyphicons-halflings-regular.f4769f9b.eot","f4769f9bdb7466be65088239c12046d1"],["/static/media/glyphicons-halflings-regular.fa277232.woff","fa2772327f55d8198301fdb8bcfc8158"],["/static/media/heart.f2e5d0a4.png","f2e5d0a4ccc3e7b586f8a7a8071e2dab"],["/static/media/loading.adf86d2a.gif","adf86d2ae5ab91f9e5e95a0e0c1c55f8"],["/static/media/woodenBackground1.764f4199.jpg","764f4199059f41cc6470206e4fd61dd1"],["/static/media/woodenBackground2.ee4d570c.jpg","ee4d570c5c0f0c146f7dec1d0be7d7a7"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});